# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Uat-Drk-Web-Portal CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ uat ]
  pull_request:
    branches: [ uat ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs
  continuous-integration:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm install
          npm ci
      # build and test the apps
      - name: build
        run: |
          npm run build
      #          npm run test

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/uat_drk_web_portal:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  continuous-deplyment:
    runs-on: ubuntu-latest
    needs: continuous-integration
    steps:
      - name: Conneting...  Digital Ocean Droplet
        uses: appleboy/ssh-action@master # An action made to control Linux servers
        with: # We set all our secrets here for the action, these won't be shown in the action logs
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          # key: ${{ secrets.PRIVATE_KEY }}
          script: |
            git clone https://github.com/cloud-cropdata-in/helm-drk-web-portal.git
            cd helm-drk-web-portal/
            git checkout uat
            aws eks update-kubeconfig --region ap-south-1 --name cdt-uat-drk-eks-cluster
            helm upgrade --install --recreate-pods -i drk-web-portal drk-web-portal -n javaapi
            export NODE_PORT=$(kubectl get --namespace javaapi -o jsonpath="{.spec.ports[0].nodePort}" services drk-web-portal)
            cd
            rm -rf helm-drk-web-portal
            echo "Deployment Done..."
