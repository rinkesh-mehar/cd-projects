# This is a basic workflow to help you get started with Actions

name: Uat-Master-Data-API-CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ uat ]
  pull_request:
    branches: [ uat ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  continuous-integration:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build project with Maven
        run: mvn -B package --file pom.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/uat_master_data_api:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  continuous-deplyment:
    runs-on: ubuntu-latest
    needs: continuous-integration
    steps:
      - name: Conneting...  Digital Ocean Droplet
        uses: appleboy/ssh-action@master # An action made to control Linux servers
        with: # We set all our secrets here for the action, these won't be shown in the action logs
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          # key: ${{ secrets.PRIVATE_KEY }}
          script: |
            git clone https://github.com/cloud-cropdata-in/helm-master-data-api.git
            cd helm-master-data-api/
            git checkout uat
            aws eks update-kubeconfig --region ap-south-1 --name cdt-uat-ts-eks-cluster
            helm upgrade --install --recreate-pods -i master-data-api master-data-api -n javaapi
            export NODE_PORT=$(kubectl get --namespace javaapi -o jsonpath="{.spec.ports[0].nodePort}" services master-data-api)
            cd
            rm -rf helm-master-data-api
            echo "Deployment Done..."